/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Inmueble;
import io.swagger.model.Negocio;

@Api(value = "inmueble", description = "the inmueble API")
@RequestMapping(value = "/inmueble")
public interface InmuebleApi {

    @ApiOperation(value = "crear un inmueble", nickname = "agregarInmueble", notes = "Agregar un inmueble", tags={ "administradores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "inmueble creado"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "inmueble ya existe") })
    @RequestMapping(value = "/{idInmueble}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> agregarInmueble(@ApiParam(value = "ID del inmueble a buscar",required=true) @PathVariable("idInmueble") String idInmueble,@ApiParam(value = "inmueble a agregar"  )  @Valid @RequestBody Inmueble inmueble);
    
    @ApiOperation(value = "remover un inmueble", nickname = "removerInmueble", notes = "Remover un inmueble", tags={ "administradores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "inmueble removido"),
        @ApiResponse(code = 400, message = "invalid input, object invalid") })
    @RequestMapping(value = "/{idInmueble}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> removerInmueble(@ApiParam(value = "ID del inmueble a buscar",required=true) @PathVariable("idInmueble") String idInmueble,@ApiParam(value = "inmueble a remover"  )  @Valid @RequestBody Inmueble inmueble);



    @ApiOperation(value = "buscar un inmueble", nickname = "buscarInmueble", notes = "Enviando un ID valido devuelve la informacion del inmueble ", response = Inmueble.class, tags={ "administradores","negociadores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "devolver resultado obtenido", response = Inmueble.class),
        @ApiResponse(code = 400, message = "parametro incorrecto") })
    @RequestMapping(value = "/{idInmueble}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Inmueble> buscarInmueble(@ApiParam(value = "ID del inmueble a buscar",required=true) @PathVariable("idInmueble") String idInmueble);
    
    @ApiOperation(value = "buscar todos los negocios", nickname = "listarNegocios", response = List.class, tags={ "administradores","negociadores", })
    @ApiResponses(value = { 
    		@ApiResponse(code = 200, message = "devolver resultado obtenido", response = List.class),
            @ApiResponse(code = 400, message = "parametro incorrecto") })
    @RequestMapping(value = "/{idInmueble}/negocios",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    @ResponseBody List<Negocio> listarNegocios(@ApiParam(value = "ID del inmueble a buscar",required=true) @PathVariable("idInmueble") String idInmueble);

}
